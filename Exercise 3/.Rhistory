fit9 <- Arima(hsales, order = c(5, 1, 0), seasonal = c(0, 1, 1))
fit10 <- Arima(hsales, order = c(4, 1, 1), seasonal = c(0, 1, 1))
fit11 <- Arima(hsales, order = c(3, 1, 1), seasonal = c(0, 1, 1))
fit12 <- Arima(hsales, order = c(5, 1, 1), seasonal = c(0, 1, 1))
# Comparing the AIC_c of the different models
c(fit1$aicc, fit2$aicc, fit3$aicc, fit4$aicc, fit5$aicc, fit6$aicc, fit7$aicc, fit8$aicc,
fit9$aicc, fit10$aicc, fit11$aicc, fit12$aicc)
fit1 <- Arima(hsales, order = c(0, 1, 2), seasonal = c(3, 1, 0))
fit2 <- Arima(hsales, order = c(0, 1, 1), seasonal = c(3, 1, 0))
fit3 <- Arima(hsales, order = c(0, 1, 3), seasonal = c(3, 1, 0))
fit4 <- Arima(hsales, order = c(1, 1, 2), seasonal = c(3, 1, 0))
fit5 <- Arima(hsales, order = c(1, 1, 1), seasonal = c(3, 1, 0))
fit6 <- Arima(hsales, order = c(1, 1, 3), seasonal = c(3, 1, 0))
fit7 <- Arima(hsales, order = c(4, 1, 0), seasonal = c(3, 1, 0))
fit8 <- Arima(hsales, order = c(3, 1, 0), seasonal = c(3, 1, 0))
fit9 <- Arima(hsales, order = c(5, 1, 0), seasonal = c(3, 1, 0))
fit10 <- Arima(hsales, order = c(4, 1, 1), seasonal = c(3, 1, 0))
fit11 <- Arima(hsales, order = c(3, 1, 1), seasonal = c(3, 1, 0))
fit12 <- Arima(hsales, order = c(5, 1, 1), seasonal = c(3, 1, 0))
# Comparing the AIC_c of the different models
c(fit1$aicc, fit2$aicc, fit3$aicc, fit4$aicc, fit5$aicc, fit6$aicc, fit7$aicc, fit8$aicc,
fit9$aicc, fit10$aicc, fit11$aicc, fit12$aicc)
fit1 <- Arima(hsales, order = c(0, 1, 2), seasonal = c(0, 1, 1))
fit2 <- Arima(hsales, order = c(0, 1, 1), seasonal = c(0, 1, 1))
fit3 <- Arima(hsales, order = c(0, 1, 3), seasonal = c(0, 1, 1))
fit4 <- Arima(hsales, order = c(1, 1, 2), seasonal = c(0, 1, 1))
fit5 <- Arima(hsales, order = c(1, 1, 1), seasonal = c(0, 1, 1))
fit6 <- Arima(hsales, order = c(1, 1, 3), seasonal = c(0, 1, 1))
fit7 <- Arima(hsales, order = c(4, 1, 0), seasonal = c(0, 1, 1))
fit8 <- Arima(hsales, order = c(3, 1, 0), seasonal = c(0, 1, 1))
fit9 <- Arima(hsales, order = c(5, 1, 0), seasonal = c(0, 1, 1))
fit10 <- Arima(hsales, order = c(4, 1, 1), seasonal = c(0, 1, 1))
fit11 <- Arima(hsales, order = c(3, 1, 1), seasonal = c(0, 1, 1))
fit12 <- Arima(hsales, order = c(5, 1, 1), seasonal = c(0, 1, 1))
table <- c(fit1$aicc, fit2$aicc, fit3$aicc, fit4$aicc, fit5$aicc, fit6$aicc, fit7$aicc, fit8$aicc,
fit9$aicc, fit10$aicc, fit11$aicc, fit12$aicc)
library(xtable)
xtable(table)
c(fit1$aicc, fit2$aicc, fit3$aicc, fit4$aicc, fit5$aicc, fit6$aicc, fit7$aicc, fit8$aicc,
fit9$aicc, fit10$aicc, fit11$aicc, fit12$aicc)
summary(fit5)
res <- residuals(fit5)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
hist(res, xlab='Residuals',main='')
hist(res, xlab='Residuals',main='',breaks=30)
hist(res, xlab='Residuals',main='',breaks=20)
hist(res, xlab='Residuals',main='', breaks=20, col='light blue')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
res <- residuals(fit5)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
hist(res, xlab='Residuals',main='', breaks=20, col='light blue')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
Box.test(residuals(fit5), lag=24, fitdf=1, type="Ljung") # checks for autocorrelation
auto.arima(hsales)
res <- residuals(fit5)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
fit3 <- Arima(euretail, order=c(0,1,3), seasonal=c(0,1,1))
res <- residuals(fit3)
tsdisplay(res)
Box.test(res, lag=16, fitdf=4, type="Ljung")
Box.test(residuals(fit5), lag=24, fitdf=1, type="Ljung") # checks for autocorrelation
Box.test(residuals(fit5), lag=24, fitdf=4, type="Ljung") # checks for autocorrelation
Box.test(residuals(fit5), lag=24, fitdf=2, type="Ljung") # checks for autocorrelation
Box.test(residuals(fit5), lag=24, fitdf=3, type="Ljung") # checks for autocorrelation
fit <- Arima(h02, order=c(3,0,1), seasonal=c(0,1,2), lambda=0)
fit <- Arima(h02, order=c(3,0,1), seasonal=c(0,1,2), lambda=0)
Box.test(residuals(fit), lag=36, fitdf=6, type="Ljung")
fit <- auto.arima(hsales, lambda=0, d=0, D=1, max.order=9, stepwise=FALSE, approximation=FALSE)
fit5  <- Arima(hsales, order = c(1, 0, 1), seasonal = c(0, 1, 1))
summary(fit5)
fit1  <- Arima(hsales, order = c(0, 0, 2), seasonal = c(0, 1, 1))
fit2  <- Arima(hsales, order = c(0, 0, 1), seasonal = c(0, 1, 1))
fit3  <- Arima(hsales, order = c(0, 0, 3), seasonal = c(0, 1, 1))
fit4  <- Arima(hsales, order = c(1, 0, 2), seasonal = c(0, 1, 1))
fit5  <- Arima(hsales, order = c(1, 0, 1), seasonal = c(0, 1, 1))
fit6  <- Arima(hsales, order = c(1, 0, 3), seasonal = c(0, 1, 1))
fit7  <- Arima(hsales, order = c(4, 0, 0), seasonal = c(0, 1, 1))
fit8  <- Arima(hsales, order = c(3, 0, 0), seasonal = c(0, 1, 1))
fit9  <- Arima(hsales, order = c(5, 0, 0), seasonal = c(0, 1, 1))
fit10 <- Arima(hsales, order = c(4, 0, 1), seasonal = c(0, 1, 1))
fit11 <- Arima(hsales, order = c(3, 0, 1), seasonal = c(0, 1, 1))
fit12 <- Arima(hsales, order = c(5, 0, 1), seasonal = c(0, 1, 1))
c(fit1$aicc, fit2$aicc, fit3$aicc, fit4$aicc, fit5$aicc, fit6$aicc, fit7$aicc, fit8$aicc,
fit9$aicc, fit10$aicc, fit11$aicc, fit12$aicc)
fit5  <- Arima(hsales, order = c(1, 1, 1), seasonal = c(0, 1, 1))
summary(fit5)
fit5  <- Arima(hsales, order = c(1, 0, 1), seasonal = c(0, 1, 1))
c(fit1$aicc, fit2$aicc, fit3$aicc, fit4$aicc, fit5$aicc, fit6$aicc, fit7$aicc, fit8$aicc,
fit9$aicc, fit10$aicc, fit11$aicc, fit12$aicc)
summary(fit5)
res <- residuals(fit5)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
hist(res, xlab='Residuals',main='', breaks=20, col='light blue')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
# Portmanteau test
Box.test(residuals(fit5), lag=24, fitdf=3, type="Ljung") # checks for autocorrelation
fit5  <- Arima(hsales, order = c(1, 1, 1), seasonal = c(0, 1, 1))
res <- residuals(fit5)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
Box.test(residuals(fit5), lag=24, fitdf=3, type="Ljung") # checks for autocorrelation
Box.test(residuals(fit5), lag=12, fitdf=3, type="Ljung") # checks for autocorrelation
getrmse <- function(x,h,...) {
train.end <- time(x)[length(x)-h]
test.start <- time(x)[length(x)-h+1]
train <- window(x,end=train.end)
test <- window(x,start=test.start)
fit <- Arima(train,...)
fc <- forecast(fit,h=h)
return(accuracy(fc,test)[2,"RMSE"])
}
fit5  <- Arima(hsales, order = c(1, 1, 1), seasonal = c(0, 1, 1),lambda=0)
c(fit1$aicc, fit2$aicc, fit3$aicc, fit4$aicc, fit5$aicc, fit6$aicc, fit7$aicc, fit8$aicc,
fit9$aicc, fit10$aicc, fit11$aicc, fit12$aicc)
res <- residuals(fit5)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
hist(res, xlab='Residuals',main='', breaks=20, col='light blue')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
# Portmanteau test
Box.test(residuals(fit5), lag=12, fitdf=3, type="Ljung") # checks for autocorrelation
fit1  <- Arima(hsales, order = c(0, 1, 2), seasonal = c(0, 1, 1), lambda=0)
fit2  <- Arima(hsales, order = c(0, 1, 1), seasonal = c(0, 1, 1), lambda=0)
fit3  <- Arima(hsales, order = c(0, 1, 3), seasonal = c(0, 1, 1), lambda=0)
fit4  <- Arima(hsales, order = c(1, 1, 2), seasonal = c(0, 1, 1), lambda=0)
fit5  <- Arima(hsales, order = c(1, 1, 1), seasonal = c(0, 1, 1), lambda=0)
fit6  <- Arima(hsales, order = c(1, 1, 3), seasonal = c(0, 1, 1), lambda=0)
fit7  <- Arima(hsales, order = c(4, 1, 0), seasonal = c(0, 1, 1), lambda=0)
fit8  <- Arima(hsales, order = c(3, 1, 0), seasonal = c(0, 1, 1), lambda=0)
fit9  <- Arima(hsales, order = c(5, 1, 0), seasonal = c(0, 1, 1), lambda=0)
fit10 <- Arima(hsales, order = c(4, 1, 1), seasonal = c(0, 1, 1), lambda=0)
fit11 <- Arima(hsales, order = c(3, 1, 1), seasonal = c(0, 1, 1), lambda=0)
fit12 <- Arima(hsales, order = c(5, 1, 1), seasonal = c(0, 1, 1), lambda=0)
c(fit1$aicc, fit2$aicc, fit3$aicc, fit4$aicc, fit5$aicc, fit6$aicc, fit7$aicc, fit8$aicc,
fit9$aicc, fit10$aicc, fit11$aicc, fit12$aicc)
summary(fit5)
res <- residuals(fit5)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
hist(res, xlab='Residuals',main='', breaks=20, col='light blue')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
# Portmanteau test
Box.test(residuals(fit5), lag=12, fitdf=3, type="Ljung") # checks for autocorrelation
getrmse(hsales, h=24, order = c(0, 1, 2), seasonal = c(0, 1, 1), lambda=0)
getrmse(hsales, h=24, order = c(0, 1, 1), seasonal = c(0, 1, 1), lambda=0)
getrmse(hsales, h=24, order = c(0, 1, 3), seasonal = c(0, 1, 1), lambda=0)
getrmse(hsales, h=24, order = c(1, 1, 2), seasonal = c(0, 1, 1), lambda=0)
getrmse(hsales, h=24, order = c(1, 1, 1), seasonal = c(0, 1, 1), lambda=0)
getrmse(hsales, h=24, order = c(1, 1, 3), seasonal = c(0, 1, 1), lambda=0)
getrmse(hsales, h=24, order = c(4, 1, 0), seasonal = c(0, 1, 1), lambda=0)
getrmse(hsales, h=24, order = c(3, 1, 0), seasonal = c(0, 1, 1), lambda=0)
getrmse(hsales, h=24, order = c(5, 1, 0), seasonal = c(0, 1, 1), lambda=0)
getrmse(hsales, h=24, order = c(4, 1, 1), seasonal = c(0, 1, 1), lambda=0)
getrmse(hsales, h=24, order = c(3, 1, 1), seasonal = c(0, 1, 1), lambda=0)
getrmse(hsales, h=24, order = c(5, 1, 1), seasonal = c(0, 1, 1), lambda=0)
tsdisplay(residuals(fit10))
Box.test(residuals(fit10), lag=48, fitdf=6, type="Ljung")
Box.test(residuals(fit10), lag=12, fitdf=3, type="Ljung")
?Box.test
tsdisplay(residuals(fit10))
Box.test(residuals(fit10), lag=12, fitdf=3, type="Ljung")
res <- residuals(fit5)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
hist(res, xlab='Residuals',main='', breaks=20, col='light blue')
Box.test(residuals(fit5), lag=12, fitdf=3, type="Ljung") # checks for autocorrelation
Box.test(residuals(fit5), lag=12, fitdf=4, type="Ljung") # checks for autocorrelation
Box.test(residuals(fit5), lag=12, fitdf=1, type="Ljung") # checks for autocorrelation
summary(fit5)
Box.test(residuals(fit5), lag=12, fitdf=4, type="Ljung") # checks for autocorrelation
Box.test(residuals(fit5), lag=24, fitdf=4, type="Ljung") # checks for autocorrelation
Box.test(residuals(fit5), lag=36, fitdf=4, type="Ljung") # checks for autocorrelation
Box.test(residuals(fit5), lag=24, fitdf=4, type="Ljung") # checks for autocorrelation
summary(fit5)
res <- residuals(fit5)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
tsdisplay(residuals(fit10))
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
tsdisplay(residuals(fit10))
Box.test(residuals(fit10), lag=12, fitdf=3, type="Ljung")
summary(fit10)
Box.test(residuals(fit10), lag=24, fitdf=1, type="Ljung")
summary(fit5)
res <- residuals(fit5)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
hist(res, xlab='Residuals',main='', breaks=20, col='light blue')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
Box.test(residuals(fit5), lag=24, fitdf=4, type="Ljung") # checks for autocorrelation
fcast <- forecast(fit5, h=24)
plot(fcast,ylab='House Sales',xlab='Year',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
fit_ets<- ets(hsales)
fcast_ets = forecast(fit_ets, h=24)
plot(fcast_ets,ylab='House Sales',xlab='Year',main='')
fit_ets<- ets(hsales);fit_ets
Box.test(residuals(fit_ets), lag=24, fitdf=4, type="Ljung") # checks for autocorrelation
par(mfrow=c(1,2))
plot(fcast, ylim = c(20,100), ylab='House Sales',xlab='Year',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
plot(fcast_ets, ylim = c(20,100),ylab='House Sales',xlab='Year',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
fit_stl <- stlf(hsales, robust=TRUE, method=c('arima'));fit_stl
fcast_stl <- forecast(fit_stl, h=24)
fcast_stl
Box.test(residuals(fit_ets), lag=24, fitdf=4, type="Ljung") # checks for autocorrelation
par(mfrow=c(1,3))
plot(fcast, ylim = c(20,100),ylab='House Sales',xlab='Year',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
plot(fcast_ets, ylim = c(20,100),ylab='House Sales',xlab='Year',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
plot(fcast_stl, ylim = c(20,100),ylab='House Sales',xlab='Year',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
lambda <- BoxCox.lambda(hsales)
bc_hsales <- BoxCox(hsales,lambda)
plot(hsales,main='',ylab='House Sales',xlab='Year')
lambda <- BoxCox.lambda(hsales)
bc_hsales <- BoxCox(hsales,lambda)
plot(bc_hsales)
plot(hsales,main='',ylab='House Sales',xlab='Year')
plot(stl(hsales,'periodic'),main='')
plot(stl(bc_hsales,'periodic'),main='')
plot(fcast_stl, ylim = c(20,100),ylab='House Sales',xlab='Year',main='')
res <- residuals(fit5)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
hist(res, xlab='Residuals',main='', breaks=20, col='light blue')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
res_ets <- residuals(fit_ets)
tsdisplay(res_ets, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
hist(res_ets, xlab='Residuals',main='', breaks=20, col='light blue')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
res_stl <- residuals(fit_stl)
tsdisplay(res_stl, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
hist(res_stl, xlab='Residuals',main='', breaks=20, col='light blue')
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
tsdisplay(res_stl, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
tsdisplay(res_stl, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
set.seed(0)
e <- rnorm(100)
y <- ts(numeric(100))
y1 <- ts(numeric(100))
y2 <- ts(numeric(100))
y3 <- ts(numeric(100))
y4 <- ts(numeric(100))
y5 <- ts(numeric(100))
for(i in 2:100)
y[i] <- 0.6*y[i-1] + e[i]
for(i in 2:100)
y1[i] <- -0.8*y1[i-1] + e[i]
for(i in 2:100)
y2[i] <- -0.4*y2[i-1] + e[i]
for(i in 2:100)
y3[i] <- 0*y3[i-1] + e[i]
for(i in 2:100)
y4[i] <- 0.4*y4[i-1] + e[i]
for(i in 2:100)
y5[i] <- 0.8*y5[i-1] + e[i]
# ----------------------------------------------------------------------------------------------------
# (b) Produce a time plot for the series. How does the plot change as you change φ1?
plot(y,main='',ylim=c(-3,3))
lines(y1, col=5, lty=2)
lines(y2, col=3, lty=2)
lines(y3, col=4, lty=2)
lines(y4, col=2, lty=2)
lines(y5, col=6, lty=2)
legend('topleft',lty=1, col=c(1,5,3,4,2,6), c(expression(phi == 0.6),
expression(phi == -0.8), expression(phi == -0.4), expression(phi == 0.0),
expression(phi == 0.4), expression(phi == 0.8)), pch=1, cex=0.8)
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
for(i in 2:100):
y[i] <- e[i] + 0.6*e[i-1]
for(i in 2:100){
y[i] <- e[i] + 0.6*e[i-1]}
plot(y,main='',ylim=c(-3,3))
set.seed(0)
e <- rnorm(100)
y <- ts(numeric(100))
y1 <- ts(numeric(100))
y2 <- ts(numeric(100))
y3 <- ts(numeric(100))
y4 <- ts(numeric(100))
y5 <- ts(numeric(100))
for(i in 2:100)
y[i] <- 0.6*y[i-1] + e[i]
for(i in 2:100)
y1[i] <- -0.8*y1[i-1] + e[i]
for(i in 2:100)
y2[i] <- -0.4*y2[i-1] + e[i]
for(i in 2:100)
y3[i] <- 0*y3[i-1] + e[i]
for(i in 2:100)
y4[i] <- 0.4*y4[i-1] + e[i]
for(i in 2:100)
y5[i] <- 0.8*y5[i-1] + e[i]
# ----------------------------------------------------------------------------------------------------
# (b) Produce a time plot for the series. How does the plot change as you change φ1?
plot(y,main='',ylim=c(-3,3))
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
lines(y1, col=5, lty=2)
lines(y2, col=3, lty=2)
lines(y3, col=4, lty=2)
lines(y4, col=2, lty=2)
lines(y5, col=6, lty=2)
legend('topleft',lty=1, col=c(1,5,3,4,2,6), c(expression(phi == 0.6),
expression(phi == -0.8), expression(phi == -0.4), expression(phi == 0.0),
expression(phi == 0.4), expression(phi == 0.8)), pch=1, cex=0.8)
plot(y,main='',ylim=c(-3,3))
lines(y1, col=5, lty=2)
lines(y2, col=3, lty=2)
lines(y3, col=4, lty=2)
lines(y4, col=2, lty=2)
lines(y5, col=6, lty=2)
legend('topleft',lty=1, col=c(1,5,3,4,2,6), c(expression(phi == 0.6),
expression(phi == -0.8), expression(phi == -0.4), expression(phi == 0.0),
expression(phi == 0.4), expression(phi == 0.8)), pch=1, cex=0.8)
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
y <- ts(numeric(100))
y1 <- ts(numeric(100))
y2 <- ts(numeric(100))
y3 <- ts(numeric(100))
y4 <- ts(numeric(100))
y5 <- ts(numeric(100))
for(i in 2:100)
y[i] <- e[i] + 0.6*e[i-1]
for(i in 2:100)
y1[i] <- e[i] - 0.8*e[i-1]
for(i in 2:100)
y2[i] <- e[i] - 0.4*e[i-1]
for(i in 2:100)
y3[i] <- e[i] + 0*e[i-1]
for(i in 2:100)
y4[i] <- e[i] + 0.4*e[i-1]
for(i in 2:100)
y5[i] <- e[i] + 0.8*e[i-1]
# ----------------------------------------------------------------------------------------------------
# (d) Produce a time plot for the series. How does the plot change as you change θ1?
plot(y,main='',ylim=c(-3,3))
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
lines(y1, col=5, lty=2)
lines(y2, col=3, lty=2)
lines(y3, col=4, lty=2)
lines(y4, col=2, lty=2)
lines(y5, col=6, lty=2)
legend('topleft',lty=1, col=c(1,5,3,4,2,6), c(expression(theta == 0.6),
expression(theta == -0.8), expression(theta == -0.4), expression(theta == 0.0),
expression(theta == 0.4), expression(theta == 0.8)), pch=1, cex=0.8)
y_arma <- ts(numeric(100))
for(i in 2:100)
y_arma[i] <- e[i] + 0.6*e[i-1] + 0.6*y_arma[i-1]
# ----------------------------------------------------------------------------------------------------
# (f) Generate data from an AR(2) model with φ1=-0.8 and φ2=0.3 and σ2=1.
# (Note that these parameters will give a non-stationary series.)
y_ar <- ts(numeric(100))
for(i in 3:100)
y_ar[i] <- -0.8*y_ar[i-1] + 0.3*y_ar[i-2] + e[i]
# ----------------------------------------------------------------------------------------------------
# (g) Graph the latter two series and compare them.
par(mfrow=c(1,2))
plot(y_arma,ylab='ARMA(1,1)',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
plot(y_ar,ylab='AR(2)',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
y <- ts(numeric(100))
y1 <- ts(numeric(100))
y2 <- ts(numeric(100))
y3 <- ts(numeric(100))
y4 <- ts(numeric(100))
y5 <- ts(numeric(100))
for(i in 2:100)
y[i] <- e[i] + 0.6*e[i-1]
for(i in 2:100)
y1[i] <- e[i] - 0.8*e[i-1]
for(i in 2:100)
y2[i] <- e[i] - 0.4*e[i-1]
for(i in 2:100)
y3[i] <- e[i] + 0*e[i-1]
for(i in 2:100)
y4[i] <- e[i] + 0.4*e[i-1]
for(i in 2:100)
y5[i] <- e[i] + 0.8*e[i-1]
# ----------------------------------------------------------------------------------------------------
# (d) Produce a time plot for the series. How does the plot change as you change θ1?
plot(y,main='',ylim=c(-3,3))
lines(y1, col=5, lty=2)
lines(y2, col=3, lty=2)
lines(y3, col=4, lty=2)
lines(y4, col=2, lty=2)
lines(y5, col=6, lty=2)
legend('topleft',lty=1, col=c(1,5,3,4,2,6), c(expression(theta == 0.6),
expression(theta == -0.8), expression(theta == -0.4), expression(theta == 0.0),
expression(theta == 0.4), expression(theta == 0.8)), pch=1, cex=0.8)
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
y <- ts(numeric(100))
y1 <- ts(numeric(100))
y2 <- ts(numeric(100))
y3 <- ts(numeric(100))
y4 <- ts(numeric(100))
y5 <- ts(numeric(100))
for(i in 2:100)
y[i] <- 0.6*y[i-1] + e[i]
for(i in 2:100)
y1[i] <- -0.8*y1[i-1] + e[i]
for(i in 2:100)
y2[i] <- -0.4*y2[i-1] + e[i]
for(i in 2:100)
y3[i] <- 0*y3[i-1] + e[i]
for(i in 2:100)
y4[i] <- 0.4*y4[i-1] + e[i]
for(i in 2:100)
y5[i] <- 0.8*y5[i-1] + e[i]
# ----------------------------------------------------------------------------------------------------
# (b) Produce a time plot for the series. How does the plot change as you change φ1?
plot(y,main='',ylim=c(-3,3))
lines(y1, col=5, lty=2)
lines(y2, col=3, lty=2)
lines(y3, col=4, lty=2)
lines(y4, col=2, lty=2)
lines(y5, col=6, lty=2)
legend('topleft',lty=1, col=c(1,5,3,4,2,6), c(expression(phi == 0.6),
expression(phi == 0.4), expression(phi == 0.8)), pch=1, cex=0.8)
expression(phi == -0.8), expression(phi == -0.4), expression(phi == 0.0),
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
fit5  <- Arima(hsales, order = c(1, 1, 1), seasonal = c(0, 1, 1), lambda=0)
summary(fit5)
fcast <- forecast(fit5, h=24)
fit_ets<- ets(hsales);fit_ets
fit_stl <- stlf(hsales, robust=TRUE, method=c('arima'))
summary(fcast)
summary(fcast_ets)
summary(fcast_stl)
c(fcast$aicc, fcast_ets$aicc, fcast_stl$aicc)
summary(fit5)
summary(fit_ets)
summary(fit_stl)
fit5  <- Arima(hsales, order = c(1, 1, 1), seasonal = c(0, 1, 1), lambda=0)
summary(fit5)
c(fit1$aicc, fit2$aicc, fit3$aicc, fit4$aicc, fit5$aicc, fit6$aicc, fit7$aicc, fit8$aicc,
fit9$aicc, fit10$aicc, fit11$aicc, fit12$aicc)
?Arima
fit1  <- Arima(hsales, order = c(0, 1, 2), seasonal = c(0, 1, 1))
fit2  <- Arima(hsales, order = c(0, 1, 1), seasonal = c(0, 1, 1))
fit3  <- Arima(hsales, order = c(0, 1, 3), seasonal = c(0, 1, 1))
fit4  <- Arima(hsales, order = c(1, 1, 2), seasonal = c(0, 1, 1))
fit5  <- Arima(hsales, order = c(1, 1, 1), seasonal = c(0, 1, 1))
fit6  <- Arima(hsales, order = c(1, 1, 3), seasonal = c(0, 1, 1))
fit7  <- Arima(hsales, order = c(4, 1, 0), seasonal = c(0, 1, 1))
fit8  <- Arima(hsales, order = c(3, 1, 0), seasonal = c(0, 1, 1))
fit9  <- Arima(hsales, order = c(5, 1, 0), seasonal = c(0, 1, 1))
fit10 <- Arima(hsales, order = c(4, 1, 1), seasonal = c(0, 1, 1))
fit11 <- Arima(hsales, order = c(3, 1, 1), seasonal = c(0, 1, 1))
fit12 <- Arima(hsales, order = c(5, 1, 1), seasonal = c(0, 1, 1))
# Comparing the AIC_c of the different models
c(fit1$aicc, fit2$aicc, fit3$aicc, fit4$aicc, fit5$aicc, fit6$aicc, fit7$aicc, fit8$aicc,
fit9$aicc, fit10$aicc, fit11$aicc, fit12$aicc)
summary(fit5)
res <- residuals(fit5)
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
hist(res, xlab='Residuals',main='', breaks=20, col='light blue')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
Box.test(residuals(fit5), lag=24, fitdf=4, type="Ljung") # checks for autocorrelation
tsdisplay(res, main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
getrmse <- function(x,h,...) {
train.end <- time(x)[length(x)-h]
test.start <- time(x)[length(x)-h+1]
train <- window(x,end=train.end)
test <- window(x,start=test.start)
fit <- Arima(train,...)
fc <- forecast(fit,h=h)
return(accuracy(fc,test)[2,"RMSE"])
}
getrmse(hsales, h=24, order = c(0, 1, 2), seasonal = c(0, 1, 1))
getrmse(hsales, h=24, order = c(0, 1, 1), seasonal = c(0, 1, 1))
getrmse(hsales, h=24, order = c(0, 1, 3), seasonal = c(0, 1, 1))
getrmse(hsales, h=24, order = c(1, 1, 2), seasonal = c(0, 1, 1))
getrmse(hsales, h=24, order = c(1, 1, 1), seasonal = c(0, 1, 1))
getrmse(hsales, h=24, order = c(1, 1, 3), seasonal = c(0, 1, 1))
getrmse(hsales, h=24, order = c(4, 1, 0), seasonal = c(0, 1, 1))
getrmse(hsales, h=24, order = c(3, 1, 0), seasonal = c(0, 1, 1))
getrmse(hsales, h=24, order = c(5, 1, 0), seasonal = c(0, 1, 1))
getrmse(hsales, h=24, order = c(4, 1, 1), seasonal = c(0, 1, 1))
getrmse(hsales, h=24, order = c(3, 1, 1), seasonal = c(0, 1, 1))
getrmse(hsales, h=24, order = c(5, 1, 1), seasonal = c(0, 1, 1))
summary(fit7)
tsdisplay(residuals(fit10))
Box.test(residuals(fit10), lag=24, fitdf=1, type="Ljung")
fcast <- forecast(fit5, h=24)
plot(fcast,ylab='House Sales',xlab='Year',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
tsdisplay(residuals(fit7))
Box.test(residuals(fit7), lag=24, fitdf=1, type="Ljung")
plot(log(hsales))
plot(hsales,main='',ylab='House Sales',xlab='Year')
plot(stl(hsales,'periodic'),main='')
fit_ets<- ets(hsales)
fcast_ets = forecast(fit_ets, h=24)
par(mfrow=c(1,2))
plot(fcast, ylim = c(20,100), ylab='House Sales',xlab='Year',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
plot(fcast_ets, ylim = c(20,100),ylab='House Sales',xlab='Year',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
fit_stl <- stlf(hsales, robust=TRUE, method=c('arima'))
fcast_stl <- forecast(fit_stl, h=24)
Box.test(residuals(fit_ets), lag=24, fitdf=4, type="Ljung") # checks for autocorrelation
par(mfrow=c(1,3))
plot(fcast, ylim = c(20,100),ylab='House Sales',xlab='Year',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
plot(fcast_ets, ylim = c(20,100),ylab='House Sales',xlab='Year',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
plot(fcast_stl, ylim = c(20,100),ylab='House Sales',xlab='Year',main='')
title(main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
tsdisplay(diff(diff(diff(hsales,12))),main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
adf.test(diff(diff(diff(hsales,12))), alternative = "stationary")
tsdisplay(diff(diff(hsales,12)),main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
tsdisplay(diff(diff(diff(hsales,12))),main=paste('Emilie Engen, Timestamp:',Sys.time()),cex.main=1)
